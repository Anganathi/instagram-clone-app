[{"/home/anga/Documents/instagram-clone-app/instagram-clone-app/src/index.js":"1","/home/anga/Documents/instagram-clone-app/instagram-clone-app/src/App.js":"2","/home/anga/Documents/instagram-clone-app/instagram-clone-app/src/reportWebVitals.js":"3","/home/anga/Documents/instagram-clone-app/instagram-clone-app/src/Post.js":"4","/home/anga/Documents/instagram-clone-app/instagram-clone-app/src/firebase.js":"5","/home/anga/Documents/instagram-clone-app/instagram-clone-app/src/ImageUpload.js":"6"},{"size":500,"mtime":1608298110476,"results":"7","hashOfConfig":"8"},{"size":6458,"mtime":1608591116780,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1608298110476,"results":"10","hashOfConfig":"8"},{"size":2233,"mtime":1608591920171,"results":"11","hashOfConfig":"8"},{"size":700,"mtime":1608390225132,"results":"12","hashOfConfig":"8"},{"size":1928,"mtime":1608417995727,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"bgdwn",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/home/anga/Documents/instagram-clone-app/instagram-clone-app/src/index.js",[],["29","30"],"/home/anga/Documents/instagram-clone-app/instagram-clone-app/src/App.js",["31"],"import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport logo from \"./images/logo.svg\";\nimport Post from \"./Post.js\";\nimport { auth, db } from \"./firebase\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button } from \"@material-ui/core\";\nimport { Input } from \"@material-ui/core\";\nimport ImageUpload from \"./ImageUpload\";\nimport InstagramEmbed from \"react-instagram-embed\";\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    height: 200,\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [modalStyle] = useState(getModalStyle);\n  const [posts, setPosts] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [openSignIn, setOpenSignIn] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState(null);\n\n  //useEffect runs a piece of code based on a specific condition\n  useEffect(() => {\n    const unsubsribe = auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        //if user has logged in\n        console.log(authUser);\n        setUser(authUser); //this thing keeps you logged in, does not kick you out when you refresh\n        if (authUser.displayName) {\n          // don't update username\n        } else {\n          // if we just created someone\n          return authUser.updateProfile({\n            displayName: username,\n          });\n        }\n      } else {\n        // user has logged out\n        setUser(null);\n      }\n    });\n\n    return () => {\n      //perform cleanup actions before re-running function\n      unsubsribe(); // detach listener before we have duplicates\n    };\n  }, [user, username]);\n\n  useEffect(() => {\n    // this is where the code runs\n    db.collection(\"posts\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) => {\n        //everytime a new post is added, this code is executed\n        setPosts(\n          snapshot.docs.map((doc) => ({\n            id: doc.id,\n            post: doc.data(),\n          }))\n        );\n      });\n  }, []); // [] means whatever the conditional code is, run it once and tha's it\n\n  const signUp = (event) => {\n    event.preventDefault();\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      // .then((authUser) => {\n      //   authUser.user.updateProfile({\n      //     displayName: username,\n      //   });\n      // })\n      .catch((error) => alert(error.message));\n\n    setOpen(false);\n  };\n\n  const signIn = (event) => {\n    event.preventDefault();\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .catch((error) => alert(error.message));\n\n    setOpenSignIn(false);\n  };\n\n  return (\n    <div className=\"app\">\n      <Modal open={open} onClose={() => setOpen(false)}>\n        <div style={modalStyle} className={classes.paper}>\n          <form className=\"app__signup\">\n            <center>\n              <img className=\"app__headerImage\" src={logo} alt=\"\"></img>\n            </center>\n            <Input\n              placeholder=\"username\"\n              type=\"text\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n            <Input\n              placeholder=\"email\"\n              type=\"text\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <Input\n              placeholder=\"password\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <Button type=\"submit\" onClick={signUp}>\n              Sign Up\n            </Button>\n          </form>\n        </div>\n      </Modal>\n      <Modal open={openSignIn} onClose={() => setOpenSignIn(false)}>\n        <div style={modalStyle} className={classes.paper}>\n          <form className=\"app__signup\">\n            <center>\n              <img className=\"app__headerImage\" src={logo} alt=\"\"></img>\n            </center>\n            <Input\n              placeholder=\"email\"\n              type=\"text\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <Input\n              placeholder=\"password\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <Button type=\"submit\" onClick={signIn}>\n              Sign In\n            </Button>\n          </form>\n        </div>\n      </Modal>\n\n      <div className=\"app__header\">\n        <img className=\"app__headerImage\" src={logo} alt=\"\"></img>\n\n        {user ? (\n          <Button onClick={() => auth.signOut()}>Logout</Button>\n        ) : (\n          <div className=\"app__loginContainer\">\n            <Button onClick={() => setOpenSignIn(true)}>Sign In</Button>\n            <Button onClick={() => setOpen(true)}>Sign Up</Button>\n          </div>\n        )}\n      </div>\n\n      <div className=\"app__posts\">\n        <div className=\"app__postsLeft\">\n          {posts.map(({ id, post }) => (\n            <Post\n              key={id}\n              postId={id}\n              user={user}\n              username={post.username}\n              caption={post.caption}\n              imageURL={post.imageURL}\n            />\n          ))}\n        </div>\n        <div className=\"app__postsRight\">\n          <InstagramEmbed\n            clientAccessToken=\"2884551148494216|fd6001046b2560f07db170d81252bcfd\"\n            url=\"https://www.instagram.com/p/Zw9o4/\"\n            maxWidth={320}\n            hideCaption={false}\n            containerTagName=\"div\"\n            injectScript\n            protocol=\"\"\n            onLoading={() => {}}\n            onSuccess={() => {}}\n            onAfterRender={() => {}}\n            onFailure={() => {}}\n          />\n        </div>\n      </div>\n\n      {/* {user?.displayName ? (\n        <ImageUpload username={user.displayName} />\n      ) : (\n        <h3>You need to login to upload </h3>\n      )} */}\n    </div>\n  );\n}\n\nexport default App;\n","/home/anga/Documents/instagram-clone-app/instagram-clone-app/src/reportWebVitals.js",[],"/home/anga/Documents/instagram-clone-app/instagram-clone-app/src/Post.js",[],"/home/anga/Documents/instagram-clone-app/instagram-clone-app/src/firebase.js",[],"/home/anga/Documents/instagram-clone-app/instagram-clone-app/src/ImageUpload.js",[],["32","33"],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":10,"column":8,"nodeType":"40","messageId":"41","endLine":10,"endColumn":19},{"ruleId":"34","replacedBy":"42"},{"ruleId":"36","replacedBy":"43"},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'ImageUpload' is defined but never used.","Identifier","unusedVar",["44"],["45"],"no-global-assign","no-unsafe-negation"]